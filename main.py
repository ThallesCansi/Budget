from typing import Annotated
from fastapi import FastAPI, Form, Request, status
from fastapi.responses import HTMLResponse, RedirectResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
import uvicorn

from repositories.ContaRepo import ContaRepo
from repositories.UsuarioRepo import UsuarioRepo
from repositories.CategoriaRepo import CategoriaRepo

from routes.MainRouter import router as mainRouter
from routes.UsuarioRouter import router as UsuarioRouter
from routes.ContaRouter import router as ContaRouter
from routes.CategoriaRouter import router as CategoriaRouter


UsuarioRepo.criarTabela()
ContaRepo.criarTabela()
CategoriaRepo.criarTabela()

description = """
# Budget - Realizando o controle de suas finan√ßas. üí∏

## Usu√°rio

Esta sess√£o √© respons√°vel por realizar todos os controles que envolve os usu√°rios do sistema.

- Inserir novos usu√°rios
- Consultar todos os usu√°rios
- Consultar os dados de um √∫nico usu√°rio
- Alterar os dados de um usu√°rio
- Excluir algum usu√°rio
- Excluir todos os usu√°rios

## Conta

- Inserir novas contas
- Consultar todos as contas
- Consultar os dados de uma √∫nica conta
- Alterar os dados de uma conta *Est√° retornando um erro mas funciona*
- Excluir alguma conta
- Excluir todas as contas

## Categoria

- Inserir novas categorias
- Consultar todos as categorias
- Consultar os dados de uma √∫nica categoria
- Alterar os dados de uma categorias
- Excluir alguma categoria
- Excluir todas as categorias

## Dependente *N√£o implementado*

## Transa√ß√£o *N√£o implementado*
"""

contact = {
    "name": "Thalles Cansi",
    "e-mail": "thalles_cansi@hotmail.com",
}

license = {
    "name": "Apache 2.0",
    "identifier": "MIT",
}

tags_metadata = [
    {
        "name": "Usu√°rio",
        "description": "Opera√ß√µes com os Usu√°rios",
    },
    {
        "name": "Conta",
        "description": "Opera√ß√µes com as Contas",
    },
    {
        "name": "Categoria",
        "description": "Opera√ß√µes com as Categorias",
    },
]

app = FastAPI(
    title="Budget",
    description=description,
    version="2.0.0",
    contact=contact,
    license_info=license,
    openapi_tags=tags_metadata,
)

app.mount("/static", StaticFiles(directory="static", html=True), name="static")

app.include_router(mainRouter)
app.include_router(UsuarioRouter)
app.include_router(ContaRouter)
app.include_router(CategoriaRouter)

if __name__ == "__main__":
    uvicorn.run("main:app", reload=True, host="0.0.0.0", port=80)


